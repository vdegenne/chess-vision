import{z as d,A as p,T as c,E as i,F as n,G as u}from"./index-CgJD-gYR.js";var S=Object.defineProperty,_=Object.getOwnPropertyDescriptor,h=(t,o,a,r)=>{for(var e=r>1?void 0:r?_(o,a):o,s=t.length-1,m;s>=0;s--)(m=t[s])&&(e=(r?m(o,a,e):m(e))||e);return r&&e&&S(o,a,e),e};let l=class extends d{constructor(){super(...arguments),this.colorMode=p.SYSTEM,this.themeColor="#00FF1E"}async updated(t){t.has("colorMode")&&(c.mode=this.colorMode);const{themeFromSourceColor:o,applyTheme:a}=await i(async()=>{const{themeFromSourceColor:e,applyTheme:s}=await import("./index-DhKpNmY2.js");return{themeFromSourceColor:e,applyTheme:s}},[],import.meta.url),r=o(this.themeColor,c.appliedColorScheme==="dark","vibrant",0);a(document,r)}get appliedColorScheme(){return c.appliedColorScheme}toggleMode(){const o=c.appliedColorScheme==="dark"?p.LIGHT:p.DARK;this.colorMode=o}};h([n()],l.prototype,"colorMode",2);h([n()],l.prototype,"themeColor",2);l=h([u("sfc:theme")],l);const v=window.themeStore=new l;window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",()=>v.requestUpdate());c.init();export{l as ThemeStore,v as themeStore};
